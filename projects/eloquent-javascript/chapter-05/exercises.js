// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function flatten(arrays){
  // creating varibale and setting it equal to empty array 
  var all = []; 
// creating for loop to loop through the array parameter
  for(let i = 0; i < arrays.length; i++){
//creating 2nd loop to loop through the inner index of array parameter
for(let j = 0; j < arrays[i].length; j++){
  all.push(arrays[i][j]); // pusing index i and j into empty array 
}


} // return all array 
return all; 


}

  

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////
// creating loop function that takes 4 parameters
function loop(start, test, update, body){
for (let value = start; test(value); value = update(value)) { // creating for loop to iterate parameters 
    
  body(value);

}

}
// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(array, test) {
// creating variable is true and giving it boolean of true 
var istrue = true
// create for loop to iterate through array parameter
  for(let i = 0; i < array.length; i++){
// if element of array is falsy  
  if(!test(array[i])){
    istrue = false // setting is true to false
  }
}
return istrue; // logic above not executed return is true

}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(string) {
// create arrays to store ltr and rtl
let ltr = []; 
let rtl = []; 

for(let i = 0; i < string.length; i++){
let script = characterScript(string.charCodeAt(i)); 

if (script !== null){
if(script.direction === "ltr"){
  ltr.push(script); // ltr += 1 
} else if (script.direction === "rtl"){
  rtl.push(script); // rtl += 1
}
}

}

if(ltr.length > rtl.length){
  return "ltr";
} else {
  return "rtl"; 
}

}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
